{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\nconst input = document.querySelector('.form-input');\nconst textarea = document.querySelector('.form-textarea');\nconst button = document.querySelector('form-buttton');\ninput.classList.add(\"mail\");\ntextarea.classList.add(\"text\");\nbutton.classList.add(\"btn\");\n\nconst localStorageKey = 'feedback-form-state';\nform.addEventListener('input', saveToLS);\nfunction saveToLS () {\n    const userEmail = form.elements.email.value;\n    const userMessage = form.elements.message.value;\n    const data = {\n        email: userEmail,\n        message: userMessage,\n    };\n    const jsonData = JSON.stringify(data);\n    localStorage.setItem(localStorageKey, jsonData);\n}\n\nfunction loadFromLS() {\n    const loadData = localStorage.getItem(localStorageKey);\n    try {\n        const result = JSON.parse(loadData);\n        return result;\n    } catch {\n    return loadData;\n    }\n}\n    \nfunction rebootData() {\n    const data = loadFromLS(localStorageKey) || {};\n    form.elements.email.value = data.email || '';\n    form.elements.message.value = data.message || '';\n}\n    \nrebootData(localStorageKey);\n\nform.addEventListener('submit', pressToButton);\nfunction pressToButton (evt) {\n    evt.preventDefault();\n    const data = loadFromLS(localStorageKey) || {};\n    console.log(data);\n    localStorage.removeItem(localStorageKey);\n    form.reset();\n};\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n    \n// const localStorageKey = 'feedback-form-state';\n// const localFormData = JSON.parse(localStorage.getItem(localStorageKey));\n\n// if (localFormData !== null && localFormData !== undefined) {\n//   refs.input.value = localFormData.email;\n//   refs.textarea.value = localFormData.message;\n// }\n\n// refs.form.addEventListener('input', e => {\n//   const formData = {\n//     email: refs.input.value.trim(),\n//     message: refs.textarea.value.trim(),\n//   };\n\n//   localStorage.setItem(localStorageKey, JSON.stringify(formData));\n// });\n\n// refs.form.addEventListener('submit', event => {\n//   event.preventDefault();\n//   const elements = event.target.elements;\n//   const formData = {\n//     email: elements.email.value.trim(),\n//     message: elements.message.value.trim(),\n//   };\n\n//   if (\n//     event.target.elements.email.value.trim() !== '' &&\n//     event.target.elements.message.value.trim() !== ''\n//   ) {\n//     console.log(formData);\n//     localStorage.removeItem(localStorageKey);\n//     refs.form.reset();\n//   }\n// });"],"names":["form","input","textarea","button","localStorageKey","saveToLS","userEmail","userMessage","data","jsonData","loadFromLS","loadData","rebootData","pressToButton","evt"],"mappings":"wFAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAS,SAAS,cAAc,cAAc,EACpDF,EAAM,UAAU,IAAI,MAAM,EAC1BC,EAAS,UAAU,IAAI,MAAM,EAC7BC,EAAO,UAAU,IAAI,KAAK,EAE1B,MAAMC,EAAkB,sBACxBJ,EAAK,iBAAiB,QAASK,CAAQ,EACvC,SAASA,GAAY,CACjB,MAAMC,EAAYN,EAAK,SAAS,MAAM,MAChCO,EAAcP,EAAK,SAAS,QAAQ,MACpCQ,EAAO,CACT,MAAOF,EACP,QAASC,CACjB,EACUE,EAAW,KAAK,UAAUD,CAAI,EACpC,aAAa,QAAQJ,EAAiBK,CAAQ,CAClD,CAEA,SAASC,GAAa,CAClB,MAAMC,EAAW,aAAa,QAAQP,CAAe,EACrD,GAAI,CAEA,OADe,KAAK,MAAMO,CAAQ,CAE1C,MAAM,CACF,OAAOA,CACN,CACL,CAEA,SAASC,GAAa,CAClB,MAAMJ,EAAOE,EAA0B,GAAK,GAC5CV,EAAK,SAAS,MAAM,MAAQQ,EAAK,OAAS,GAC1CR,EAAK,SAAS,QAAQ,MAAQQ,EAAK,SAAW,EAClD,CAEAI,EAA0B,EAE1BZ,EAAK,iBAAiB,SAAUa,CAAa,EAC7C,SAASA,EAAeC,EAAK,CACzBA,EAAI,eAAc,EAClB,MAAMN,EAAOE,EAA0B,GAAK,GAC5C,QAAQ,IAAIF,CAAI,EAChB,aAAa,WAAWJ,CAAe,EACvCJ,EAAK,MAAK,CACd"}